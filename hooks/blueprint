#!/bin/bash
shopt -s nullglob
set -eu

# Genesis Kit `blueprint' Hook
#
# This script outputs the list of merge files needed to support the desired
# feature set selected by the environment parameter file.  As generated, it
# lists all *.yml files in the base, then all *.yml files in each detected
# feature directory, in the order the features are specified in the environment
# yml file.  If finer control is desired, add logic around the wants_kit_feature()
# function (takes a feature as a string, returns exit code 0 if present, non-
# zero exit code otherwise).


validate_features self-signed-cert +provided-cert \
                  monitor-cf legacy-firehose

declare -a manifests
manifests+=( manifests/releases.yml manifests/prometheus.yml )

for want in ${GENESIS_REQUESTED_FEATURES}; do
  case "$want" in
    monitor-cf)
      cf_exodus_path="$(lookup params.cf_exodus_path "$GENESIS_ENVIRONMENT/cf")"
      cf_version="$(safe get "${GENESIS_EXODUS_MOUNT}${cf_exodus_path}:kit_version")"
      if [[ "$cf_version" =~ ^2. ]] ; then
        manifests+=( manifests/monitor-cf-v2.yml )
        want_feature legacy-firehose && bail "legacy-firehose is not available for cf v2.x deployments"
      else
        manifests+=( manifests/monitor-cf.yml )
        want_feature legacy-firehose && manifests+=( manifests/legacy-firehose.yml )
      fi
      ;;

    monitor-*)
      manifests+=( "manifests/${want}.yml" )
      ;;

    legacy-firehose)
      want_feature monitor-cf || bail "legacy-firehose feature only applicable if monitor-cf feature is active"
      ;;

    esac
done

echo "${manifests[@]}"
