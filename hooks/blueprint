#!/bin/bash
shopt -s nullglob
set -eu

# Genesis Kit `blueprint' Hook
#
# This script outputs the list of merge files needed to support the desired
# feature set selected by the environment parameter file.  As generated, it
# lists all *.yml files in the base, then all *.yml files in each detected
# feature directory, in the order the features are specified in the environment
# yml file.  If finer control is desired, add logic around the wants_kit_feature()
# function (takes a feature as a string, returns exit code 0 if present, non-
# zero exit code otherwise).


#validate_features self-signed-cert +provided-cert \
#                  monitor-cf monitor-credhub legacy-firehose
declare -a merge opsfiles
opsfiles=()
ops_var='merge'
want_feature "ocfp" && ops_var="opsfiles"

for want in ${GENESIS_REQUESTED_FEATURES}
do
  case ${want} in
    (ocfp|self-signed-cert|+provided-cert|monitor-cf|monitor-credhub|legacy-firehose)
      true
      ;;
    (*)
      if [[ -f "$GENESIS_ROOT/ops/$want.yml" ]]
      then eval "$ops_var+=( \"$GENESIS_ROOT/ops/$want.yml\" )"
      else echo "ERROR: Unsupported feature: ${want}" ; exit 1
      fi
      ;;
  esac
done

#declare -a manifests
merge+=( "manifests/prometheus.yml"
         "manifests/releases/postgres.yml"
         "manifests/releases/prometheus.yml"
         "manifests/releases/bpm.yml" )

for want in ${GENESIS_REQUESTED_FEATURES}; do
  case "$want" in
    monitor-cf)
      cf_exodus_path="$(lookup params.cf_exodus_path "$GENESIS_ENVIRONMENT/cf")"
      cf_version='1.0.0'
      if safe exists --quiet "${GENESIS_EXODUS_MOUNT}${cf_exodus_path}:kit_version" ; then
        cf_version="$(safe get --quiet "${GENESIS_EXODUS_MOUNT}${cf_exodus_path}:kit_version")"
      fi
      if [[ "$cf_version" =~ ^2\. ]] ; then # cf-kit 2.0 to <3.0
        merge+=( "manifests/monitor-cf-v2.yml" )
        want_feature legacy-firehose && bail "legacy-firehose is not available for cf v2.x deployments"
      else
        merge+=( "manifests/monitor-cf.yml" )
        want_feature legacy-firehose && merge+=( "manifests/legacy-firehose.yml" )
      fi
      ;;

    monitor-*)
      merge+=( "manifests/${want}.yml" )
      ;;

    legacy-firehose)
      want_feature monitor-cf || bail "legacy-firehose feature only applicable if monitor-cf feature is active"
      ;;

    esac
done

want_feature ocfp && merge+=(
  "ocfp/meta.yml"
  "ocfp/ocfp.yml"
)

echo "${merge[@]}"
if (( ${#opsfiles[@]} > 0 ))
then echo "${opsfiles[@]}"
fi
