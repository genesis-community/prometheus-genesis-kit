#!/bin/bash
shopt -s nullglob
set -eu

#
# Genesis Kit `new' Hook

# Do we have a prometheus network?
if ccq -e '.networks[] | .name | select(. == "prometheus")' >/dev/null 2>&1; then
  network='prometheus'
else
  network=
  prompt_for network "select" \
    'What network do you want to use for this Prometheus deployment?' \
    $( ccq '.networks | sort_by(.name)| .[] | .name | "-o \(.)"' )
fi

default_ip="$(ccq '.networks[] | select(.name == $nw) | .subnets[] | select(has("static")) | .static[] ' --arg nw "$network" |  head -n1 | sed -e 's/\(^\|[^0-9]\)\(\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}\) *$/\2/')"
if [[ $default_ip =~ ^([0-9]{1,3}(\.|$)){4}$ ]] ; then
  default="--default $default_ip"
else
  default=""
fi
ip=
prompt_for ip line \
	'What static IP do you want to deploy this Prometheus server on?' \
	--validation ip $default

# Self-signed certs & provided certs feature
describe "" \
  "Prometheus will be running on HTTPS, and as such, needs an SSL cert/key."
prompt_for ssl_cert_feature "select" \
  "Do you have an SSL certificate for Prometheus, or do you need a self-signed cert?" \
  -o "[provided-cert] I have my own certificate for Prometheus" \
  -o "[self-signed-cert] Please have Genesis create a self-signed certificate for Prometheus"
[[ "$ssl_cert_feature" == "self-signed-cert" ]] && features+=("$ssl_cert_feature")

case "$ssl_cert_feature" in
  "provided-cert")
    prompt_for "$GENESIS_VAULT_PREFIX/nginx/ssl_certificate:certificate" secret-block \
      "What is the SSL certificate for Prometheus?"

    prompt_for "$GENESIS_VAULT_PREFIX/nginx/ssl_certificate:key" secret-block \
      "What is the SSL key for Prometheus?"
    ;;
esac

describe "" \
  "If you'd like to access Prometheus via a domain name, please enter it now. If you" \
  "do not have one, and would prefer to access Prometheus via the static IP, leave " \
  "this field empty."
external_domain=
prompt_for external_domain line --default '' \
  'What is the domain you want to use to access Prometheus?' \

describe "" \
  "By default, Prometheus will monitor VM metrics and your BOSH environment. If you" \
  "want more detail, you can select from supported exporters below to gain insight" \
  "into software-specific metrics. Some exporters may require additional configuration."

for exporter in cf credhub ; do

  monitor_exporter=''
  prompt_for monitor_exporter boolean --inline \
    "Would you like to monitor your '#G{$exporter}' environment?" \
    --default true

  if [[ "$monitor_exporter" == 'true' ]] ; then
    features+=( "monitor-$exporter" )
  fi

  case "$exporter" in
    *)
      : # nothing to do for cf
      ;;
  esac
done

{
cat <<EOF
kit:
  name:    $GENESIS_KIT_NAME
  version: $GENESIS_KIT_VERSION
  features:
    - ((append))
EOF

for f in "${features[@]}" ; do
  printf -- '    - %s\n' "$f"
done

genesis_config_block

cat <<EOF
params:
  static_ip: $ip
EOF

# If the $external_domain was different from the default (which is $ip), then add
# it to the env file. Otherwise, don't include it.
[[ -n $external_domain ]] \
  && printf  -- '  external_domain: %s\n' "$external_domain" \
  || true

} >> "$GENESIS_ROOT/$GENESIS_ENVIRONMENT.yml"

offer_environment_editor